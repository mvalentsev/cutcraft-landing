name: Deploy to GitHub Pages

on:
  push:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: |
          cd pages-landing
          bun install --frozen-lockfile

      - name: Build
        run: |
          cd pages-landing
          bun run build

      - name: Report build size
        run: |
          cd pages-landing
          echo "## 📦 Build Size Report" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          du -sh dist >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          find dist -name "*.js" -o -name "*.css" | xargs ls -lh | awk '{print $5, $9}' >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

          # Modern 2025: Bundle size check with fail condition (excluding compressed files)
          DIST_SIZE=$(find dist -type f ! -name "*.br" ! -name "*.gz" -exec du -b {} + | awk '{sum+=$1} END {print sum}')
          MAX_SIZE=$((300 * 1024)) # 300 KB limit (uncompressed)
          if [ $DIST_SIZE -gt $MAX_SIZE ]; then
            echo "❌ Build size exceeds 300 KB limit!" >> $GITHUB_STEP_SUMMARY
            echo "   Current: $(numfmt --to=iec $DIST_SIZE)" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "✅ Build size within limits: $(numfmt --to=iec $DIST_SIZE)" >> $GITHUB_STEP_SUMMARY

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v13
        with:
          urls: |
            https://cutcraft.cc
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: ./pages-landing/.lighthouserc.json

      - name: Setup Pages
        uses: actions/configure-pages@v6

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./pages-landing/dist

  deploy:
    name: Deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
